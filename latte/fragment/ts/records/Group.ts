/**
 * Generated by xlatte
 */
module latte{

	/**
	 * Record for table group
	 */
	export class Group extends groupBase{

		//region Static
        /**
         * Gets the suggestion loader
         * @returns {*}
         */
        static suggestionLoader(){
            return (d: DataRecordValueItem, callback: (items: Array<Item>) => any): Message  => {

                return Group.search(d.text).send((records: Group[]) => {
                    var items: Array<Item> = [];

                    records.forEach((g: Group) => {
                        var b = new ButtonItem(g.name);
                        b.click.add(() => { d.record = g });
                        items.push(b)
                    });

                    callback.call(this, items)

                })
            }
        }
		//endregion

		//region Fields
		//endregion

		//region Private Methods
		//endregion

		//region Methods
		/**
		 * Gets the metadata about the record
		 *
		 * @returns Object
		 */
		getMetadata(): IRecordMeta {
			return {
				fields: {
					name: {
						text: strings.name,
						type: 'string'
					}
				}
			}
		}

		/**
		 * Returns a string representation of the object
		 */
		toString(): string{
		    return this.name;
		}
		//endregion

		//region Events
		//endregion

		//region Properties
		//endregion

	}
}